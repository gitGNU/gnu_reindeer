<?xml version="1.0"?>
<section id="types">
	<title>Types</title>
	<table>
		<title>Table of Reindeer types</title>
		<tgroup cols="4" align="left" colsep="1" rowsep="1">
		<thead>
		<row>
			<entry>C Type</entry>
			<entry>RenType value</entry>
			<entry>Minimum bit-width</entry>
			<entry>Description</entry>
		</row>
		</thead>
		<tbody>
		<row>
			<entry><type>ren_sint08</type></entry>
			<entry><constant>REN_TYPE_SINT08</constant></entry>
			<entry>8</entry>
			<entry>Signed integer</entry>
		</row>
		<row>
			<entry><type>ren_uint08</type></entry>
			<entry><constant>REN_TYPE_UINT08</constant></entry>
			<entry>8</entry>
			<entry>Unsigned integer</entry>
		</row>
		<row>
			<entry><type>ren_sint16</type></entry>
			<entry><constant>REN_TYPE_SINT16</constant></entry>
			<entry>16</entry>
			<entry>Signed integer</entry>
		</row>
		<row>
			<entry><type>ren_uint16</type></entry>
			<entry><constant>REN_TYPE_UINT16</constant></entry>
			<entry>16</entry>
			<entry>Unsigned integer</entry>
		</row>
		<row>
			<entry><type>ren_sint32</type></entry>
			<entry><constant>REN_TYPE_UINT32</constant></entry>
			<entry>32</entry>
			<entry>Signed integer</entry>
		</row>
		<row>
			<entry><type>ren_uint32</type></entry>
			<entry><constant>REN_TYPE_SINT32</constant></entry>
			<entry>32</entry>
			<entry>Unsigned integer</entry>
		</row>
		<row>
			<entry><type>ren_sint64</type></entry>
			<entry><constant>REN_TYPE_SINT64</constant></entry>
			<entry>64</entry>
			<entry>Signed integer</entry>
		</row>
		<row>
			<entry><type>ren_uint64</type></entry>
			<entry><constant>REN_TYPE_UINT64</constant></entry>
			<entry>64</entry>
			<entry>Unsigned integer</entry>
		</row>
		<row>
			<entry><type>ren_sfloat</type></entry>
			<entry><constant>REN_TYPE_SFLOAT</constant></entry>
			<entry>32</entry>
			<entry>Single-precision floating-point number</entry>
		</row>
		<row>
			<entry><type>ren_double</type></entry>
			<entry><constant>REN_TYPE_DFLOAT</constant></entry>
			<entry>64</entry>
			<entry>Double-precision floating-point number</entry>
		</row>
		<row>
			<entry><type>ren_bool</type></entry>
			<entry><constant>REN_TYPE_BOOL</constant></entry>
			<entry>1</entry>
			<entry>
				Boolean. False (FALSE) is zero, true (TRUE) is non-zero.
			</entry>
		</row>
		<row>
			<entry><type>ren_size</type></entry>
			<entry>n/a</entry>
			<entry>System dependent</entry>
			<entry>Integer large enough to hold the numeric value of a pointer.</entry>
		</row>
		</tbody>
		</tgroup>
	</table>

	<para>
	Implementations are not required to correctly interpret bits outside the
	minimum range. Thus, if a variable has a value outside the defined
	ranges it will lead to undefined behavior.
	</para>

	<para>
	Reindeer types are not necessarily identical to the corresponding
	standard C types. Never cast pointers of C types to pointers of Reindeer
	types or vice versa.
	</para>

	<para>
	<type>RenType</type> is an enumerated type generally used to describe
	what type is being pointed at. Since the type <type>ren_size</type> is
	never used in this context, it does not have a value in RenType.
	</para>

	<para>
	The following function returns the size of <parameter>type</parameter>
	in bytes.
	</para>

	<funcsynopsis>
	<funcprototype>
		<funcdef>ren_size <function>ren_type_sizeof</function></funcdef>
		<paramdef>RenType <parameter>type</parameter></paramdef>
	</funcprototype>
	</funcsynopsis>
</section>
